# Copyright (c) 2021 NVIDIA Corporation.  All rights reserved. 

# To build the singularity container, run: $  singularity build --fakeroot nways_c.simg nways_Singularity
# To copy the content of the container: $ singularity run nways_c.simg cp -rT /labs ~/labs
# To run: $ singularity run --nv nways_c.simg jupyter-lab --notebook-dir=~/labs
# Finally, open http://localhost:8888/

Bootstrap: docker
FROM: nvcr.io/nvidia/nvhpc:24.1-devel-cuda_multi-ubuntu22.04

%environment
    export XDG_RUNTIME_DIR=
    export PATH="$PATH:/usr/local/bin:/opt/anaconda3/bin:/usr/bin"
    export VER=24.1

%post
    #build_tmp=$(mktemp -d) && cd ${build_tmp}
    . /.singularity.d/env/10-docker*.sh
    apt-get -y update
    #apt-get -y dist-upgrade 
    DEBIAN_FRONTEND=noninteractive apt-get -yq install --no-install-recommends \
        python3-pip python3-setuptools nginx zip make build-essential libtbb-dev python3-dev\
	    curl git-lfs 
    
    rm -rf /var/lib/apt/cache/* 

    pip3 install --upgrade pip
    pip3 install gdown
    apt-get update -y
    apt-get -y install git nvidia-modprobe
    pip3 install jupyterlab
    pip3 install ipywidgets

    apt-get update -y

    git clone https://github.com/NVIDIA/nvbandwidth.git
    cd nvbandwidth && apt update && apt install -y libboost-program-options-dev && ./debian_install.sh
    cd ..

   ############################################ 
    apt-get update -y 

    python3 /labs/_common/dataset.py

    #wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh 
    #bash Miniconda3-latest-Linux-x86_64.sh -b -p /opt/anaconda3 
    #rm Miniconda3-latest-Linux-x86_64.sh 
    
    #cd /
    #rm -rf ${build_tmp}

%files
    _basic/openacc/ /labs/openacc
    _basic/openmp/ /labs/openmp
    _basic/_common/ /labs/_common
    _basic/iso/ /labs/iso
    _basic/cuda/ /labs/cuda
    _basic/_start_nways.ipynb /labs
    _basic/memory_coherent/ /labs/memory_coherent
    
%runscript
    "$@"

%labels
    AUTHOR mozhgank